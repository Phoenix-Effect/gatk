# Workflow for preprocessing BAM files for variant calling

# TODO: Change GATK shell commands to GATK4 format. Test Picard. Combine XX and XY to each rule. Add missing output files to rule all.

configfile: "TCGA_LIHC_v2.config.json"

# Directories
SORTED_BAM_AL_DIR = "/mnt/storage/CANCER_DOWNLOADS/PROCESSED/TCGA_LIHC/WGS/GRCh38_sorted_BAM/" # path to directory for sorted BAM alignment files

# Samples
SAMPLES = config["TCGA_LIHC_WGS_samples"]
XX_SAMPLES = config["TCGA_LIHC_WGS_females"]
XY_SAMPLES = config["TCGA_LIHC_WGS_males"]

# Reference files
REF = config["XY_wholegenome_GRCh38_ref_with_viral_genomes_path"]
DBSNP = config["dbsnp_vcf"]
INTERVAL_LIST = config["XY_interval_list"]

rule all:
	input:
		# Defining the files that snakemake will attempt to produce as an output.
		# If there is no rule defined to produce the file, or if the file already
		# exists, snakemake will throw "Nothing to be done"
		expand(SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs.bam", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XX_SAMPLES),
		expand(SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs_rmDups.bam", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XX_SAMPLES),
		expand(SORTED_BAM_AL_DIR + "{sample}_WGS_XY_withoutYpar_HISAT2_aligned_sortedbycoord_wRGs.bam", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XY_SAMPLES),
		expand(SORTED_BAM_AL_DIR + "{sample}_WGS_XY_withoutYpar_HISAT2_aligned_sortedbycoord_wRGs_rmDups.bam", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XY_SAMPLES),
		expand(SORTED_BAM_AL_DIR + "{sample}_recal_data.table", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XX_SAMPLES),
		expand(SORTED_BAM_AL_DIR + "{sample}_recal_data.table", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XY_SAMPLES),
		expand(SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs_rmDups_BQcalib.bam", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XX_SAMPLES),
		expand(SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs_rmDups_BQcalib.bam.bai", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XX_SAMPLES),
		expand(SORTED_BAM_AL_DIR + "{sample}_WGS_XY_withoutYpar_HISAT2_aligned_sortedbycoord_wRGs_rmDups_BQcalib.bam", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XY_SAMPLES),
		expand(SORTED_BAM_AL_DIR + "{sample}_WGS_XY_withoutYpar_HISAT2_aligned_sortedbycoord_wRGs_rmDups_BQcalib.bam.bai", SORTED_BAM_AL_DIR=SORTED_BAM_AL_DIR, sample=XY_SAMPLES)


rule picard_add_readgroups:
	input:
		BAM = SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord.bam"
	output:
		BAM = SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs.bam"
	params:
		SAMPLENAME = "{sample}",
		PICARD = PICARD
	message: "Adding readgroups to {input.BAM}."
	shell:
		"""
		picard AddOrReplaceReadGroups I={input.BAM} O={output.BAM} RGID=0 RGLB=lib1 RGPL=Illumina RGPU=unit1 RGSM={params.SAMPLENAME}
		"""


rule index_rg_bam:
	input:
		BAM = SORTED_BAM_AL_DIR + "{sample}_XX_HISAT2_aligned_sortedbycoord_wRGs.bam"
	output: SORTED_BAM_AL_DIR + "{sample}_XX_HISAT2_aligned_sortedbycoord_wRGs.bam.bai"
	message: "Indexing BAM file {input.BAM} with Samtools."
	params:
	shell:
		"""
		samtools index {input.BAM}
		"""


rule picard_mark_duplicates:
	input:
		BAM = SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs.bam"
	output:
		BAM = SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs_rmDups.bam",
		METRICS = SORTED_BAM_AL_DIR + "{sample}_marked_dup_metrics.txt"
	params:
		SAMPLENAME = "{sample}",
		PICARD = PICARD
	message: "Removing duplicates from {input.BAM}."
	shell:
		"""
		picard MarkDuplicates I={input.BAM} O={output.BAM} M={output.METRICS} REMOVE_SEQUENCING_DUPLICATES=true
		"""


rule gatk_baseq_recalibration:
	input:
		BAM = SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs_rmDups.bam",
		REF = REF,
		DBSNP = DBSNP,
		INTERVALS = INTERVAL_LIST
	output:
		DATA = SORTED_BAM_AL_DIR + "{sample}_recal_data.table"
	message: "Recalibrating base quality scores in {input.BAM} with GATK BaseRecalibrator"
	params:
		xmx = "16g"
	shell:
		"""
		gatk \
		-Xmx{params.xmx} \
		-T BaseRecalibrator \
		-R {input.REF} \
		-I {input.BAM} \
		-L {input.INTERVALS} \
		-knownSites {input.DBSNP} \
		--filter_reads_with_N_cigar \
		-o {output.DATA}
		"""


rule gatk_create_recalibrated_bam:
	input:
		BAM = SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs_rmDups.bam",
		BASEQ_TABLE = SORTED_BAM_AL_DIR + "{sample}_recal_data.table",
		REF = REF,
		INTERVALS = INTERVAL_LIST
	output:
		BAM = SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs_rmDups_BQcalib.bam"
	message: "Recalibrating base quality scores in {input.BAM} with GATK BaseRecalibrator"
	params:
		xmx = "16g"
	shell:
		"""
		gatk \
		-Xmx{params.xmx} \
		-T PrintReads \
		-R {input.REF} \
		-I {input.BAM} \
		-BQSR {input.BASEQ_TABLE} \
		-L {input.INTERVALS} \
		--filter_reads_with_N_cigar \
		-o {output.BAM}
		"""


rule index_processed_bam:
	input:
		BAM = SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs_rmDups_BQcalib.bam"
	output: SORTED_BAM_AL_DIR + "{sample}_WGS_XX_HISAT2_aligned_sortedbycoord_wRGs_rmDups_BQcalib.bam.bai"
	message: "Indexing BAM file {input.BAM} with Samtools."
	shell:
		"""
		samtools index {input.BAM}
		"""

